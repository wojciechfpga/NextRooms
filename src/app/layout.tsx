import HeaderLayout from '@/components/Header';
import ReduxProvider from '@/components/Wrap';
import localFont from "next/font/local";
import "./globals.css";
import type { ReactNode } from 'react';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


interface RootLayoutProps {
  children: ReactNode;
  auth: any; // Dopasuj do faktycznego typu, np. `ReactNode` lub bardziej szczegółowego typu.
}

export default function RootLayout({ children, auth }: RootLayoutProps) {
  console.log(auth);
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReduxProvider>
          <HeaderLayout children={auth}></HeaderLayout>
          {children}
        </ReduxProvider>
      </body>
    </html>
  );
}
